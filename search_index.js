var documenterSearchIndex = {"docs":
[{"location":"#KWLinalg","page":"Home","title":"KWLinalg","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Collection of functions to perform linear algebra operations in-place.","category":"page"},{"location":"#Non-allocating-updates-LU-decompositions","page":"Home","title":"Non allocating updates LU decompositions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For a matrix A the function lu!(A) still allocates workspaces.","category":"page"},{"location":"","page":"Home","title":"Home","text":"using LinearAlgebra\nn = 5\nA = rand(n, n)\n@allocated D = lu(A) # 384 bytes\n@allocated Di = lu!(A) # 128 bytes","category":"page"},{"location":"","page":"Home","title":"Home","text":"The function LAPACK.getrf! is only available to matrices and always allocates the pivot-vector ipiv. We provide a function LAPACK.getrf!(A, ipiv), such that a pivot vector can be provied and is not allocated everytime. For an lu-decomposition object, this can be used as follows","category":"page"},{"location":"","page":"Home","title":"Home","text":"using KWLinalg\nusing LinearAlgebra\nn = 5\nA = rand(n, n)\nD = lu(A)\n# A is updated\nA .= rand(n, n)\n# We update the LU-decomposition in-place.\nLAPACK.getrf!(D.factors, D.ipiv)","category":"page"},{"location":"","page":"Home","title":"Home","text":"KWLinalg.getrf!","category":"page"},{"location":"#LinearAlgebra.LAPACK.getrf!","page":"Home","title":"LinearAlgebra.LAPACK.getrf!","text":"getrf!(A) -> (A, ipiv, info)\n\nCompute the pivoted LU factorization of A, A = LU.\n\nReturns A, modified in-place, ipiv, the pivoting information, and an info code which indicates success (info = 0), a singular value in U (info = i, in which case U[i,i] is singular), or an error code (info < 0).\n\n\n\n\n\ngetrf!(A, ipiv) -> (A, ipiv, info)\n\nCompute the LU factorization of a general M-by-N matrix A. The pivot-vector ipiv can be provided to avoid an allocation\n\n\n\n\n\ngetrf!(A, ipiv) -> (A, ipiv, info)\n\nCompute the LU factorization of a general M-by-N matrix A. The pivot-vector ipiv can be provided to avoid an allocation\n\n\n\n\n\n","category":"function"},{"location":"#Non-allocating-singular-value-decompositions","page":"Home","title":"Non allocating singular value decompositions","text":"","category":"section"}]
}
